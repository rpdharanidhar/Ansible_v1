---
- name: Update the Ubuntu OS and Install the Jenkins
  # hosts: test_servers
  hosts: localhost
  become: yes

  tasks:
    - name: Update and upgrade apt packages
      apt:
        update_cache: yes
        upgrade: dist

    - name: Install iptables-persistent package
      ansible.builtin.apt:
        name: iptables-persistent
        state: present
        update_cache: yes

    - name: Allow traffic on port 8080
      ansible.builtin.iptables:
        chain: INPUT
        protocol: tcp
        destination_port: 8080
        jump: ACCEPT

    - name: Allow traffic on port 8080
      ansible.builtin.command: iptables -A INPUT -p tcp --dport 8080 -j ACCEPT

    - name: Save iptables rules with the netfilter
      ansible.builtin.command: netfilter-persistent save

    - name: Save iptables rules
      ansible.builtin.command: iptables-save | tee /etc/iptables/rules.v4
      ignore_errors: yes  

    - name: Save iptables rules
      ansible.builtin.service:
        name: iptables
        state: restarted
      ignore_errors: yes

    - name: Install iptables-persistent package 
      ansible.builtin.apt:
        name: iptables-persistent
        state: present
      ignore_errors: yes
        
    - name: Install Java (Jenkins dependency)
      apt:
        name: openjdk-21-jdk
        state: present

    - name: Add Jenkins repository key to the system
      apt_key:
        url: https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key
        state: present

    - name: Add the Jenkins Repo
      ansible.builtin.command:
        cmd: sudo sh -c 'echo deb https://pkg.jenkins.io/debian-stable binary/ > /etc/apt/sources.list.d/jenkins.list'

    - name: Update apt cache with new Jenkins repo
      apt:
        update_cache: yes

    - name: Install Jenkins
      apt:
        name: jenkins
        state: latest

    - name: Ensure Jenkins is started and enabled
      service:
        name: jenkins
        state: started
        enabled: yes

    - name: Wait for Jenkins to start
      wait_for:
        port: 8080
        state: started
        timeout: 120

    - name: Get Jenkins initial admin password if the file exists
      stat:
        path: /var/lib/jenkins/secrets/initialAdminPassword
      register: jenkins_initial_password_file

    - name: Fetch Jenkins initial admin password file
      fetch:
        src: /var/lib/jenkins/secrets/initialAdminPassword
        dest: ./initialAdminPassword
      when: jenkins_initial_password_file.stat.exists

    - name: Read Jenkins initial admin password
      slurp:
        src: /var/lib/jenkins/secrets/initialAdminPassword
      register: jenkins_initial_password
      when: jenkins_initial_password_file.stat.exists

    - name: Decode Jenkins initial admin password
      set_fact:
        jenkins_initial_password_decoded: "{{ (jenkins_initial_password.content | b64decode).strip() }}"      
      when: jenkins_initial_password_file.stat.exists

    - name: Output Jenkins initial admin password
      debug:
        msg: "Jenkins initial admin password: {{ jenkins_initial_password_decoded }}"
      when: jenkins_initial_password_file.stat.exists
      
  handlers:
    - name: Restart Jenkins
      service:
        name: jenkins
        state: restarted